=respond-to($val, $query: min-width)
  @if $query == retina
    @media only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 13/10), only screen and (min-resolution: 120dpi), only screen and (min-resolution: 2dppx)
      @content
  @else
    @media ($query: $val)
      @content
    html.oldie
      @content

=retina($image_name, $w: auto, $h: auto, $extension: ".png")
  background-image: url($image_name + $extension)
  $x2img: $image_name + "@2x" + $extension
  +respond-to($query: retina, $val: "1.5")
    background-image: url($x2img)
    background-size: $w $h

=prefix($property, $val, $prefixes: ("-webkit-", "-moz-", "-o-", "-ms-", ""))
  @each $prefix in $prefixes
    #{$prefix}#{$property}: #{$val}

=keyframes($name)
  @-webkit-keyframes #{$name}
    @content

  @-moz-keyframes #{$name}
    @content

  @-o-keyframes #{$name}
    @content

  @-ms-keyframes #{$name}
    @content

  @keyframes #{$name}
    @content

// CSS Triangle mixin adapted from Bourbon [https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_triangle.scss]
=triangle($size, $color, $direction)
  height: 0
  width: 0
  @if $direction == up or $direction == down or $direction == right or $direction == left
    border-color: transparent
    border-style: solid
    border-width: $size / 2
    @if $direction == up
      border-bottom-color: $color
    @else if $direction == right
      border-left-color: $color
    @else if $direction == down
      border-top-color: $color
    @else if $direction == left
      border-right-color: $color
  @else if $direction == up-right or $direction == up-left
    border-top: $size solid $color
    @if $direction == up-right
      border-left: $size solid transparent
    @else if $direction == up-left
      border-right: $size solid transparent
  @else if $direction == down-right or $direction == down-left
    border-bottom: $size solid $color
    @if $direction == down-right
      border-left: $size solid transparent
    @else if $direction == down-left
      border-right: $size solid transparent

=text-shadow($size, $color, $direction: lower-left, $start: 1, $fade: false)
  $depth: null
  $newColor: #{$color}
  @for $i from $start through $size
    @if $fade == ghost
      $newColor: rgba($color, ($size/($i*$size)))
    @else if $fade == trails
      $newColor: rgba($color, 1-($i/100))
    @if $direction == lower-left
      $depth: append($depth, -#{$i}px #{$i}px 0 $newColor, comma)
    @else if $direction == lower-right
      $depth: append($depth, #{$i}px #{$i}px 0 $newColor, comma)
    @else if $direction == upper-right
      $depth: append($depth, #{$i}px -#{$i}px 0 $newColor, comma)
    @else if $direction == upper-left
      $depth: append($depth, -#{$i}px -#{$i}px 0 $newColor, comma)
  text-shadow: $depth